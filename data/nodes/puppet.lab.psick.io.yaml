---
puppet_enterprise::master::static_catalogs: false
puppet_enterprise::master::puppetserver::jruby_puppet_multithreaded: true
puppet_enterprise::enable_system_metrics_collection: true
puppet_enterprise::enable_database_maintenance: true

psick::pre::linux_classes:
  buildgems: psick::ruby::buildgems
psick::profiles::linux_classes:
  git: psick::git
  pe_console: psick::puppet::pe_console
  pe_puppetdb: psick::puppet::pe_puppetdb
  pe_server: psick::puppet::pe_server
  gitlab_cli: psick_profile::gitlab::cli
#  gitlab_ci: psick_profile::gitlab::ci
  puppet_ci: psick::puppet::ci
#  pe_code_manager: psick::puppet::pe_code_manager
#  gitlab_runner: psick_profile::gitlab::runner
#  octocatalog: psick_profile::octocatalog
#  danger: psick::ci::danger
  puppet_autosign: psick::puppet::autosign
#  choria_broker: choria::broker
#  hdm: hdm
  dropsonde: dropsonde
#  service_now: servicenow_cmdb_integration

# Avoid duplicated tp::repo epel resource
psick::repo::use_defaults: false

psick::puppet::pe_server::remove_global_hiera_yaml: true
psick::puppet::pe_server::extra_environment_path: '/etc/puppetlabs/code-developers'
psick::puppet::pe_server::extra_environment_files:
  host:
    ensure: link
    target: '/vagrant_puppet'

psick::puppet::pe_server::extra_authorization_rules:
  'puppetlabs catalog-diff':
    match_request_path: '^/puppet/v3/catalog/([^/]+)$'
    match_request_type: 'regex'
    match_request_method: ['get', 'post']
    allow: 'catalog-diff'
    sort_order: 500
  'puppetlabs catalog-diff certless':
    match_request_path: '^/puppet/v4/catalog'
    match_request_type: 'regex'
    match_request_method: ['post']
    allow: 'catalog-diff'
    sort_order: 500

psick::puppet::autosign::autosign: 'on'
psick::puppet::autosign::autosign_match: "*.%{facts.networking.domain}"

psick::hosts::file::extra_hosts:
  - '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6'
psick::sysctl::settings_hash:
  net.ipv6.conf.all.disable_ipv6: 0
  net.ipv6.conf.default.disable_ipv6: 0

puppet_enterprise::profile::puppetdb::allowlisted_certnames:
  - cirunner.lab.psick.io
  - git.lab.psick.io
  - puppet.lab.psick.io
  - lab.psick.io
puppet_enterprise::profile::console::allowlisted_certnames:
  - cirunner.lab.psick.io
  - git.lab.psick.io
  - puppet.lab.psick.io

# puppet infrastructure tune
puppet_enterprise::profile::database::shared_buffers: 2048MB
puppet_enterprise::puppetdb::command_processing_threads: 1
puppet_enterprise::profile::puppetdb::java_args:
  Xms: 585m
  Xmx: 585m
puppet_enterprise::profile::orchestrator::jruby_max_active_instances: 1
puppet_enterprise::profile::orchestrator::java_args:
  Xms: 585m
  Xmx: 585m
puppet_enterprise::profile::console::java_args:
  Xms: 512m
  Xmx: 512m
puppet_enterprise::master::puppetserver::jruby_max_active_instances: 1

puppet_enterprise::profile::master::java_args:
  Xms: 512m
  Xmx: 512m
puppet_enterprise::master::puppetserver::reserved_code_cache: 96m

# Gems needed
psick::puppet::gems::install_system_gems: false
psick::puppet::gems::install_gems:
  - r10k
  - deep_merge
  - hiera-eyaml
  - yard
  - puppet-strings
  - rgen
  - bundle
  - rake

# Code manager setup
puppet_enterprise::profile::master::r10k_remote: https://github.com/example42/psick.git
puppet_enterprise::profile::master::r10k_private_key: /etc/puppetlabs/puppetserver/ssh/id_rsa
puppet_enterprise::profile::master::code_manager_auto_configure: true

# setup code_manager to update classes in the console after environment code deployment
puppet_enterprise::master::code_manager::post_environment_hooks:
  - url: 'https://puppet.lab.psick.io:4433/classifier-api/v1/update-classes'
    use-client-ssl: true
psick::puppet::pe_code_manager::pe_user: 'deployer'       # A user you've created on PE
psick::puppet::pe_code_manager::pe_password: 'deployme'   # PE user password. TO CHANGE AT EVERY INSTALLATION
psick::puppet::pe_code_manager::lifetime: '5y'            # Adapt as preferred
psick::puppet::pe_code_manager::generate_ssh_keys: true   # Default breaks on code manager configured PE from 2017.2.x

# Postgres custom setting
puppet_enterprise::profile::database::auto_explain_settings:
  'max_locks_per_transaction': 320


# Configure the scripts used during Gitlab CI of the control repo
psick_profile::gitlab::ci::default_nodes:
  - puppet.lab.psick.io
psick_profile::gitlab::ci::always_nodes:
  - git.lab.psick.io
  - cirunner.lab.psick.io
psick::puppet::ci::default_nodes:
  - puppet.lab.psick.io
  - git.lab.psick.io
psick::puppet::ci::always_nodes:
  - lamp.lab.psick.io
psick::puppet::ci::options:
  job_run_default_nodes:
    - lamp.lab.psick.io
    - puppet.lab.psick.io


psick_profile::octocatalog::run_as_user: 'gitlab-runner'
psick_profile::octocatalog::template: 'psick_profile/octocatalog/octocatalog-diff.cfg.rb.erb'

# Config for the GIT Runners for Puppet deployments
# Tokens change at every gitlab installation
# Check under your control-repo project settings - CI/CD - Specific runner token
psick_profile::gitlab::runner::runners:
  deploy_puppet:
    url: 'https://git.lab.psick.io'
    token: CHANGEME
    tag_list: 'deploy_puppet'
    tls_ca_file: '/etc/puppetlabs/puppet/ssl/certs/ca.pem'

# Manage puppet agent grants. PE User must be already existing
# If using PE it must have permission to trigger remote puppet agents
psick_profile::gitlab::runner::pe_user: 'deployer'
# pe_user password:
psick_profile::gitlab::runner::pe_password: CHANGEME
# Lifetime of a token created with the above credentials
psick_profile::gitlab::runner::pe_token_lifetime: '5y'

psick_profile::gitlab::cli::manage: false
# Config for gitlab cli. Tokens change at every gitlab installation
# Use the Private token of a user with merge request and accept privileges
# Settings to generate /etc/gitlab-cli.conf used by gitlab_create_merge_request.rb and gitlab_accept_merge_request.rb
psick_profile::gitlab::cli::config_hash:
  private_token: 'qz9fZNFSaZLjVVzH_fag' # TO CHANGE AT EVERY INSTALLATION
  project_id: 1 # Control-repo project ID on GITLAB
  api_endpoint: 'https://git.lab.psick.io/api/v4'
# Settings to generate /etc/gitlab-cli.yaml used by gitlab_multirepo_create_merge_request.rb and gitlab_multirepo_accept_merge_request.rb
psick_profile::gitlab::cli::multirepo_config_hash:
  psick:
    private_token: 'qz9fZNFSaZLjVVzH_fag' # TO CHANGE AT EVERY INSTALLATION
    project_id: 1 # Repo project ID on GITLAB
    api_endpoint: 'https://git.lab.psick.io/api/v4'
  psick-hieradata:
    private_token: 'qz9fZNFSaZLjVVzH_fag' # TO CHANGE AT EVERY INSTALLATION
    project_id: 3 # Repo project ID on GITLAB
    api_endpoint: 'https://git.lab.psick.io/api/v4'

psick_profile::gitlab::cli::auto_prereq: false # Prevent Duplicate declaration: Tp::Install[ruby]"

# Monitoring
psick_profile::sensu::checks_hash:
  'check_whois42':
    command: '/opt/sensu/embedded/bin/check-whois-domain-expiration-multi.rb -d example42.com,example42.de,example42.org,example42.info,example42.eu,example42.biz,example42.training,lab42.it -c 10 -w 90'
    interval: 86400

psick::ci::danger::use_gitlab: true
psick::admin::master_enable: true
psick::bolt::is_master: true
psick::bolt::node::create_ssh_user: false

# Configure gitconfig for gitlab-runner to ignore
# self signed certificate (on gitlab server)
psick::git::configs_hash:
  gitlab-runner:
    options_hash:
      http:
        sslVerify: false

# Choria
choria::broker::network_broker: true
mcollective::client: true
#choria::broker::adapters:
#  discover:
#    stream:
#      type: "natsstream"
#      clusterid: prod_stream
#      topic: discovery
#      workers: 10
#      servers:
#        - puppet.lab.psick.io:4222
#    ingest:
#      topic: mcollective.broadcast.agent.discovery
#      protocol: request
#      workers: 10
psick::network::interfaces:
  'eth0':
    ipv4_dhcp: true
  'eth1':
    ipv4_address: '10.42.43.101'
    ipv4_netmask: '255.255.255.0'

hdm::prereq::packages:
  - sqlite-devel

hdm::nginx::nginx_package_manage: true
hdm::nginx::config_options:
  listen: '8042 default_server'

servicenow_cmdb_integration::instance: dev103845.service-now.com
servicenow_cmdb_integration::user: 'admin'
servicenow_cmdb_integration::password: 'qi!MlGsR5@T6'
servicenow_cmdb_integration::proxy: 'http://127.0.0.1:3128'

psick::openssh::hostkeys::hostkey_collect: true
psick::openssh::hostkeys::knownhosts_manage: false

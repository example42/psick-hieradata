---
# Sample role data used for tinydata testing
# Use ::psick::ostest for testing Puppet code
# Add profiles to the list below to test whole profiles
psick::base::linux_classes:
  logs: ''
  crowdsec: ''
  mail: ''
  packages: ''
psick::profiles::linux_classes:
  ostest: '::psick::ostest'
  crowdsec: ''

psick::base::windows_classes:
  time: ''
  chocolatey: chocolatey
psick::logs::rsyslog::manage: false

psick_profile::crowdsec::manage: false
psick::puppet::pe_agent::service_ensure: 'running'
psick::puppet::pe_agent::service_enable: true

# Uncomment below to skip application of base classes, as defined via psick::base::$os_classes
# and apply only what's defined by psick::profiles::$os_classes
psick::base::manage: true

psick::selinux::state: disabled

tp::settings_hash: {}
# TP4 Entrypoints
tp::data_module: 'tinydata'

# Use tp4
tp::conf_hash: {}
tp::use_v4: true
tp::on_missing_data: 'ignore'
tp::repos: []
tp::installs:
  fail2ban:
    ensure: present
    auto_prereq: true
  crowdsec:
    ensure: present
    auto_prereq: true
  snmp:
    ensure: absent
  nuclei:
    ensure: absent
#    install_method: image
    auto_prereq: true
  unzip:
    ensure: present
  git: 
    ensure: present
  wget: 
    ensure: present
#  docker: 
#    ensure: absent
  prometheus:
    ensure: absent
#    install_method: image
  nats-server: 
    ensure: absent
#    install_method: image
#  spiderfoot: 
#    ensure: absent
#    version: 'v3.5'
  sysdig:
    ensure: absent
   # auto_prereq: true
  elasticsearch: 
    ensure: absent
   # auto_prereq: true
  icinga2: 
    ensure: absent
  rsyslog: 
    ensure: present
  blender: 
    ensure: absent
    install_method: release
  mgmt:
    ensure: absent
    install_method: release    
  surfex:
    ensure: absent
#    install_method: release
    #auto_prereq: true
#    my_settings: {}
  nix:
    ensure: absent
    #auto_prereq: true
    manage_package: false
    manage_service: false

# Example with custom image
#  spiderfoot:
#    ensure: present
#    install_method: image
#    my_settings:
#      image:
#        name: 'dtagdevsec/spiderfoot:2204'
#        ports: 8080
  # powershell:
  #   ensure: absent
  # packer:
  #   ensure: absent
  # terraform:
  #   ensure: absent
  # azure-cli:
  #   ensure: absent
       
tp::uninstalls: []
tp::sources_defaults:
  ensure: absent
tp::sources: []
#  - 'prqometheus'
#  - 'spiderfoot'
#  - auditbeat
#  - boundary
#  - powershell
#  - prometheus
#  - ceph
#  - hdm
#  - postfix
#  - powertoys
#  - libreoffice
#  - activemq
#  - python-pip
#  - bolt
#  - bind-utils
#  - bzip2
#  - vault
#  - autofs
#  - ceilometer
#  - twitch
#  - obs-studio
#  - bind
#  - apache
#  - apparmor
#  - ansible
#  - bacula-client
#  - bash
#  - vscode
#  - scx
#  - sysinternals
#  - telegram-desktop
#  - sysmon
#  - procdump
#  - omi
#  - git
#  - vagrant
#  - bird
#  - webex-meetings
#  - azure-cli

#tp::images: []
# Quick fix for testos-rhe8 compiler
psick_profile::gitlab::cli::manage: false

tp::confsNO:
  snmp:
    template: 'profile/snmp/snmpd.conf.epp'
    my_options:
      rocommunity: 'secret'
  snmp::init:
    base_file: 'init'
    #template: 'profile/snmp/snmpd.init.epp'
    my_options:
      rocommunity: 'secret'
tp::dirs: {}

tp::osfamily_resourcesNO:
  RedHat:
    repo:
      - epel
      - hashicorp_repo
      - microsoft_repo
    install:
      - asciinema
  Debian:
    repo:
      - epel
      - hashicorp_repo
      - microsoft_repo
    install:
      - prometheus
    uninstall:
      - asciinema
  Suse:
    repo:
      - puppet_repo
    install:
      - pdk
  Darwin:
    install:
      - asciinema
      - microsoft_repo
  windows:
    install:
      - microsoft_repo
      - obs-studio

tp::merge_beahaviors:
  install: 'unique'
  conf: 'deep'
  dirs: 'deep'

tp::defaults:
  install:
    ensure: present
    data_module: 'tinydata'
  conf:
    - 'force'
    - 'purge'
    - 'upgrade'

